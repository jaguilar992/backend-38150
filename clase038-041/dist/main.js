(()=>{"use strict";var e={n:n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},d:(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n)};const n=require("express");var t=e.n(n);const o=require("cors"),r=require("mongoose");var i=e.n(r);const s=require("dotenv");e.n(s)().config();const a=process.env.PORT||8080,d=(process.env.BASE_URL,process.env.DATABASE_TYPE||"MONGO");class c{constructor(){}static getInstance(){return e=this,n=void 0,o=function*(){if(!c.connected)try{return yield i().connect("mongodb://localhost:27017/pokemon"),c.connected=!0,!0}catch(e){return console.log(e),!1}return c.instance},new((t=void 0)||(t=Promise))((function(r,i){function s(e){try{d(o.next(e))}catch(e){i(e)}}function a(e){try{d(o.throw(e))}catch(e){i(e)}}function d(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,a)}d((o=o.apply(e,n||[])).next())}));var e,n,t,o}}c.connected=!1;const u=c.getInstance,l=require("pino"),v=e.n(l)()();var f=function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function s(e){try{d(o.next(e))}catch(e){i(e)}}function a(e){try{d(o.throw(e))}catch(e){i(e)}}function d(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,a)}d((o=o.apply(e,n||[])).next())}))};const m=new r.Schema({id:{type:Number,required:!0,default:0},name:{type:String,required:!0,default:""},type:{type:String,required:!0,default:""},image:{type:String,required:!0,default:""}}),p=(0,r.model)("pokemon",m);class g{getAllPokemons(){return f(this,void 0,void 0,(function*(){return yield p.find()}))}getPokemonById(e){return f(this,void 0,void 0,(function*(){return yield p.findOne({id:e})}))}createPokemon(e){return f(this,void 0,void 0,(function*(){const n=new p(e);return yield n.save(),n}))}updatePokemon(e,n){return f(this,void 0,void 0,(function*(){return yield p.findOneAndUpdate({id:e},n)}))}deletePokemon(e){return f(this,void 0,void 0,(function*(){return yield p.deleteOne({id:e}),!0}))}}new g;const h=new class{getDAO(){switch(d){case"MONGO":this.pokemonDAO=new g;break;case"MYSQL":case"POSTGRES":case"FIREBASE":case"SQLITE":break;default:throw new Error("No se ha definido un tipo de base de datos")}return this.pokemonDAO}};var y=function(e,n,t,o){return new(t||(t=Promise))((function(r,i){function s(e){try{d(o.next(e))}catch(e){i(e)}}function a(e){try{d(o.throw(e))}catch(e){i(e)}}function d(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,a)}d((o=o.apply(e,n||[])).next())}))};const k=h.getDAO();const P=(0,n.Router)();P.get("/",((e,n)=>y(void 0,void 0,void 0,(function*(){const e=yield k.getAllPokemons();n.json({data:e})})))),P.get("/:id",((e,n)=>y(void 0,void 0,void 0,(function*(){const{id:t}=e.params,o=yield k.getPokemonById(t);if(!o)return n.status(404).json({message:"Pokemon not found",data:null});n.json({data:o})})))),P.post("/",((e,n)=>y(void 0,void 0,void 0,(function*(){const{id:t,name:o,type:r}=e.body;if(!t||!o||!r)return n.status(400).json({message:"Bad request",data:null});if(yield k.getPokemonById(t))return n.status(409).json({message:"Pokemon already exists",data:null});const i={id:t,name:o,type:r};i.image=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${t}.png`;const s=yield k.createPokemon(i);return n.status(201).json({data:s,message:"Pokemon has been created"})})))),P.delete("/:id",((e,n,t)=>{return o=void 0,r=void 0,s=function*(){const o=e.headers.authorization;return console.log(o),o?"123456"!==o?n.status(401).json({message:"Unauthorized",data:null}):(e.token=o,void t()):n.status(401).json({message:"Unauthorized",data:null})},new((i=void 0)||(i=Promise))((function(e,n){function t(e){try{d(s.next(e))}catch(e){n(e)}}function a(e){try{d(s.throw(e))}catch(e){n(e)}}function d(n){var o;n.done?e(n.value):(o=n.value,o instanceof i?o:new i((function(e){e(o)}))).then(t,a)}d((s=s.apply(o,r||[])).next())}));var o,r,i,s}),((e,n)=>y(void 0,void 0,void 0,(function*(){const{id:t}=e.params;if(!t)return n.status(400).json({message:"Bad request",data:null});const o=yield k.deletePokemon(t);n.json({message:"Pokemon has been deleted",data:o})}))));const w=P,O=(0,n.Router)();O.get("/",((e,n)=>y(void 0,void 0,void 0,(function*(){const e=yield k.getAllPokemons();n.render("pokedex",{pokemons:e})}))));const x=O,A=t()();A.set("view engine","pug"),A.set("views",__dirname+"/../views/"),u(),A.use(t().json()),A.use(t().urlencoded({extended:!0})),A.use(o()),A.use(t().static(__dirname+"/../public")),A.use("/api/pokemon",w),A.use("/views/pokemon",x),A.get("/",((e,n)=>{n.render("index",{title:"Pokedex",message:"Welcome to the Pokedex",time:Date.now()})})),A.listen(a,(()=>{v.info(`ğŸ”‹ Server running on port::${a}`)})).on("error",(e=>{v.error(`ğŸ”¥ Server error: ${e.message}`)}))})();